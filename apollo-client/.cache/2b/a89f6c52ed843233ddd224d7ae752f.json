{"id":"index.js","dependencies":[{"name":"/home/juan.otalora/learn/graphQL-course/apollo-client/package.json","includedInParent":true,"mtime":1594399799718},{"name":"apollo-boost","loc":{"line":1,"column":33},"parent":"/home/juan.otalora/learn/graphQL-course/apollo-client/src/index.js","resolved":"/home/juan.otalora/learn/graphQL-course/apollo-client/node_modules/apollo-boost/lib/bundle.esm.js"}],"generated":{"js":"\"use strict\";\n\nvar _apolloBoost = _interopRequireWildcard(require(\"apollo-boost\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        users {\\n            id\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar client = new _apolloBoost.default({\n  uri: 'http://localhost:4000'\n});\nvar getUsers = (0, _apolloBoost.gql)(_templateObject());\nclient.query({\n  query: getUsers\n}).then(function (response) {\n  console.log(response.data);\n});"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":21,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"name":"client","generated":{"line":21,"column":4},"source":"index.js","original":{"line":3,"column":6}},{"generated":{"line":21,"column":10},"source":"index.js","original":{"line":3,"column":12}},{"generated":{"line":21,"column":13},"source":"index.js","original":{"line":3,"column":15}},{"name":"ApolloBoost","generated":{"line":21,"column":17},"source":"index.js","original":{"line":3,"column":19}},{"generated":{"line":21,"column":37},"source":"index.js","original":{"line":3,"column":15}},{"generated":{"line":21,"column":38},"source":"index.js","original":{"line":3,"column":31}},{"name":"uri","generated":{"line":22,"column":0},"source":"index.js","original":{"line":4,"column":4}},{"name":"uri","generated":{"line":22,"column":2},"source":"index.js","original":{"line":4,"column":4}},{"generated":{"line":22,"column":5},"source":"index.js","original":{"line":4,"column":7}},{"generated":{"line":22,"column":7},"source":"index.js","original":{"line":4,"column":9}},{"generated":{"line":23,"column":0},"source":"index.js","original":{"line":3,"column":31}},{"generated":{"line":23,"column":1},"source":"index.js","original":{"line":3,"column":15}},{"generated":{"line":23,"column":2},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":24,"column":0},"source":"index.js","original":{"line":7,"column":0}},{"name":"getUsers","generated":{"line":24,"column":4},"source":"index.js","original":{"line":7,"column":6}},{"generated":{"line":24,"column":12},"source":"index.js","original":{"line":7,"column":14}},{"name":"gql","generated":{"line":24,"column":19},"source":"index.js","original":{"line":7,"column":17}},{"generated":{"line":24,"column":35},"source":"index.js","original":{"line":7,"column":14}},{"generated":{"line":24,"column":55},"source":"index.js","original":{"line":7,"column":0}},{"name":"client","generated":{"line":25,"column":0},"source":"index.js","original":{"line":15,"column":0}},{"generated":{"line":25,"column":6},"source":"index.js","original":{"line":15,"column":6}},{"name":"query","generated":{"line":25,"column":7},"source":"index.js","original":{"line":15,"column":7}},{"generated":{"line":25,"column":12},"source":"index.js","original":{"line":15,"column":0}},{"generated":{"line":25,"column":13},"source":"index.js","original":{"line":15,"column":13}},{"name":"query","generated":{"line":26,"column":0},"source":"index.js","original":{"line":16,"column":4}},{"name":"query","generated":{"line":26,"column":2},"source":"index.js","original":{"line":16,"column":4}},{"generated":{"line":26,"column":7},"source":"index.js","original":{"line":16,"column":9}},{"name":"getUsers","generated":{"line":26,"column":9},"source":"index.js","original":{"line":16,"column":11}},{"generated":{"line":27,"column":0},"source":"index.js","original":{"line":15,"column":13}},{"generated":{"line":27,"column":1},"source":"index.js","original":{"line":15,"column":0}},{"name":"then","generated":{"line":27,"column":3},"source":"index.js","original":{"line":18,"column":1}},{"generated":{"line":27,"column":7},"source":"index.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":8},"source":"index.js","original":{"line":18,"column":6}},{"name":"response","generated":{"line":27,"column":18},"source":"index.js","original":{"line":18,"column":7}},{"generated":{"line":27,"column":26},"source":"index.js","original":{"line":18,"column":6}},{"generated":{"line":27,"column":28},"source":"index.js","original":{"line":18,"column":20}},{"name":"console","generated":{"line":28,"column":0},"source":"index.js","original":{"line":19,"column":4}},{"name":"console","generated":{"line":28,"column":2},"source":"index.js","original":{"line":19,"column":4}},{"generated":{"line":28,"column":9},"source":"index.js","original":{"line":19,"column":11}},{"name":"log","generated":{"line":28,"column":10},"source":"index.js","original":{"line":19,"column":12}},{"generated":{"line":28,"column":13},"source":"index.js","original":{"line":19,"column":4}},{"name":"response","generated":{"line":28,"column":14},"source":"index.js","original":{"line":19,"column":16}},{"generated":{"line":28,"column":22},"source":"index.js","original":{"line":19,"column":24}},{"name":"data","generated":{"line":28,"column":23},"source":"index.js","original":{"line":19,"column":25}},{"generated":{"line":28,"column":27},"source":"index.js","original":{"line":19,"column":4}},{"generated":{"line":29,"column":0},"source":"index.js","original":{"line":20,"column":1}},{"generated":{"line":29,"column":1},"source":"index.js","original":{"line":15,"column":0}}],"sources":{"index.js":"import ApolloBoost, { gql } from 'apollo-boost'\n\nconst client = new ApolloBoost({\n    uri: 'http://localhost:4000'\n})\n\nconst getUsers = gql`\n    query {\n        users {\n            id\n            name\n        }\n    }\n`\nclient.query({\n    query: getUsers\n})\n.then((response) => {\n    console.log(response.data);\n})"},"lineCount":null}},"error":null,"hash":"10c7c8d128832855631c048be29a5167","cacheData":{"env":{}}}